#!/bin/sh

# usage:  ./run-test NAME

# where NAME is the name you'd like to give this test run.
# Results will be found in scraper-stats-NAME
#
# because email addresses and readmes change every week, make sure
# to run a test before making any changes, eyeball the stats diffs
# to make sure it's only readmes and email addresses, then commit
# them to the test branch.  This way your stats will be based on
# all the new emails and readmes.

name="$1"
if [ -z "$name" ]; then
    echo "Specify a name for this test run."
    exit
fi

set -e
set -x


disk_mb=256
if which hdid > /dev/null; then
    dir="/Volumes/ramdisk"
    mount | grep -q " on $dir" || (
        dev="$(hdid -nomount ram://$(($disk_mb * 2048)))"
        dev=$(echo $dev)    # because it contains garbage whitespace :(
        diskutil erasevolume HFS+ ramdisk "$dev"
    )
    # newfs_hfs "$dev"
    # mount -t hfs "$dev" "$dir"
    # hdiutil detach DEVICE to reclaim the ramdisk
else
    dir="/tmp/ramdisk"
    [ -d "$dir" ] || mkdir "$dir"
    mount | grep -q "^tmpfs on /tmp/ramdisk" || sudo mount -t tmpfs -o size=${disk_mb}M tmpfs "$dir"
    # and just use umount as usual to reclaim the ramdisk
fi


# new-workdir is found inside git's contrib,
#   /usr/share/doc/git/contrib/workdir/git-new-workdir
statsdir="$dir/stats-$name"
tmpdir="$dir/tmp-$$"

rm -rf "$tmpdir"
mkdir "$tmpdir"

git new-workdir scraper-stats "$statsdir" test
rm "$statsdir"/*

REPOS_DIR="$dir" TMPDIR="$tmpdir" \
    DUMP_REPO="$statsdir" PURGE_REPOS=1 \
    ./scraper scripts/*

rm -rf "$tmpdir"

