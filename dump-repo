#!/usr/bin/env ruby

# dumps a summary of the repo into the scraper-stats dir.
# since scraper-stats is under git revision control, it's
# easy to watch for regressions as the scraper changes.
#
# usage: ./dump-repo repos/*
#    or: ./dump-repo 0002 0009 2142


$repostats_dir = 'scraper-stats'
Dir.mkdir $repostats_dir unless test ?d, $repostats_dir


def dump_repo repo
    raise "no repo" unless repo
    repo = repo.gsub /\/$/, ''
    ENV['GIT_DIR'] = repo
    log = `git log --pretty=fuller --decorate=full --stat`
    # remove every line with a CommitDate since that's horribly variable
    log = log.each_line.reduce([]) { |a,v|
        v.gsub!(/^commit\s+[0-9A-Fa-f]*/, 'commit SHA1SHA1SHA1');
        v.gsub!(/, refs\/(remotes|heads)[^,)]*\/master/, '');
        a.push(v) unless v =~ /^CommitDate: /;
        a }.join
    ENV.delete('GIT_DIR')
    filename = File.join($repostats_dir, File.basename(repo).gsub(/\.git$/, '') + '.stats')
    puts "Stats in #{filename}"
    File.open(filename, 'w') { |f|
        f.write log
    }
end


def repo_dir dir
    return dir if test ?d, dir
    Dir.glob("repos/#{dir}*").first or raise "repos/#{dir}* does not exist!"
end


raise "specify some repos to dump" if ARGV.empty?
ARGV.each do |arg|
    dump_repo repo_dir(arg)
end

